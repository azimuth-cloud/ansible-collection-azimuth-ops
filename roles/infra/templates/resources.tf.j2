{% for image_id, image in infra_community_images.items() %}
resource "openstack_images_image_v2" "{{ image_id }}" {
  name             = "{{ image.name }}"
{% if image.local_file_path is defined %}
  local_file_path = "{{ image.local_file_path }}"
{% endif %}
  container_format = "{{ image.container_format }}"
  disk_format      = "{{ image.disk_format }}"

{% if infra_community_images_projects %}
  visibility = "shared"
{% else %}
  visibility = "community"
{% endif %}

{% if "web_console_supported" in image and image.web_console_supported %}
  tags = ["azimuth_web_console_supported"]
{% endif %}

{% if "properties" in image %}
  properties = {{ image.properties | to_nice_json() }} 
{% endif %}

{% if "verify_checksum" in image and not image.verify_checksum %}
  verify_checksum = "false"
{% elif "verfy_checksum" in image and image.verify_checksum %}
  verify_checksum = "true"
{% endif %}

  lifecycle {
    ignore_changes = [
      image_source_url,
      local_file_path
    ]
  }
}

{% for project in infra_community_images_projects %}
resource "openstack_images_image_access_v2" "{{ image_id }}_{{ project.key }}" {
  image_id  = openstack_images_image_v2.{{ image_id }}.id
  member_id = "{{ project.id }}"
}
{% endfor %}
{% endfor %}

resource "openstack_networking_secgroup_v2" "secgroup" {
  name                 = "{{ infra_name }}"
  delete_default_rules = true   # Fully manage with terraform
}

resource "openstack_networking_secgroup_rule_v2" "secgroup_rule_egress" {
  direction         = "egress"
  ethertype         = "IPv4"
  security_group_id = openstack_networking_secgroup_v2.secgroup.id
}

resource "openstack_networking_secgroup_rule_v2" "secgroup_rule_ingress_ssh" {
  direction         = "ingress"
  ethertype         = "IPv4"
  protocol          = "tcp"
  port_range_min    = 22
  port_range_max    = 22
  security_group_id = openstack_networking_secgroup_v2.secgroup.id
}

{% for port_range in infra_exposed_port_ranges %}
resource "openstack_networking_secgroup_rule_v2" "secgroup_rule_ingress_{{ port_range.name }}" {
  direction         = "ingress"
  ethertype         = "IPv4"
  protocol          = "tcp"
  port_range_min    = {{ port_range.min }}
  port_range_max    = {{ port_range.max }}
  security_group_id = openstack_networking_secgroup_v2.secgroup.id
}
{% endfor %}

{% if not infra_network_id %}
resource "openstack_networking_network_v2" "internal_net" {
  name           = "{{ infra_name }}"
  admin_state_up = "true"
}

resource "openstack_networking_subnet_v2" "internal_subnet" {
  name       = "{{ infra_name }}"
  network_id = openstack_networking_network_v2.internal_net.id
  cidr       = "{{ infra_network_cidr }}"
  ip_version = 4
}

resource "openstack_networking_router_v2" "router" {
  name                = "{{ infra_name }}"
  admin_state_up      = "true"
  external_network_id = "{{ infra_external_network_id }}"
}

resource "openstack_networking_router_interface_v2" "router_interface" {
  router_id = openstack_networking_router_v2.router.id
  subnet_id = openstack_networking_subnet_v2.internal_subnet.id
}
{% endif %}

{% if infra_provisioning_network_id %}
resource "openstack_networking_port_v2" "port_provisioning" {
  admin_state_up = "true"
  network_id = "{{ infra_provisioning_network_id }}"

  security_group_ids = [
    openstack_networking_secgroup_v2.secgroup.id
  ]
}
{% endif %}

resource "openstack_networking_port_v2" "port_internal" {
  admin_state_up = "true"
{% if infra_network_id %}
  network_id = "{{ infra_network_id }}"
{% else %}
  network_id = openstack_networking_network_v2.internal_net.id

  fixed_ip {
    subnet_id = openstack_networking_subnet_v2.internal_subnet.id
  }
{% endif %}

  security_group_ids = [
    openstack_networking_secgroup_v2.secgroup.id
  ]
}

resource "openstack_compute_keypair_v2" "keypair_deploy" {
  name = "{{ infra_name }}-deploy"
}

resource "openstack_compute_instance_v2" "node" {
  name      = "{{ infra_name }}"
{% if infra_image_id %}
  image_id = "{{ infra_image_id }}"
{% else %}
  image_id = openstack_images_image_v2.{{ infra_image_key }}.id
{% endif %}
{% if infra_flavor_id %}
  flavor_id = "{{ infra_flavor_id }}"
{% else %}
  flavor_name = "{{ infra_flavor_name }}"
{% endif %}
  key_pair  = openstack_compute_keypair_v2.keypair_deploy.name

{% if infra_provisioning_network_id %}
  network {
    port = openstack_networking_port_v2.port_provisioning.id
  }
{% endif %}

  network {
    port = openstack_networking_port_v2.port_internal.id
  }
}

resource "openstack_blockstorage_volume_v3" "data_volume" {
  name = "{{ infra_name }}-data"
  size = {{ infra_data_volume_size }}
}

resource "openstack_compute_volume_attach_v2" "data_volume_attach" {
  instance_id = openstack_compute_instance_v2.node.id
  volume_id   = openstack_blockstorage_volume_v3.data_volume.id
}

{% if not infra_provisioning_network_id %}
{% if not infra_fixed_floatingip %}
resource "openstack_networking_floatingip_v2" "fip" {
  pool = "{{ infra_floatingip_pool }}"
}
{% endif %}

resource "openstack_compute_floatingip_associate_v2" "fip_associate" {
{% if infra_fixed_floatingip %}
  floating_ip = "{{ infra_fixed_floatingip }}"
{% else %}
  floating_ip = openstack_networking_floatingip_v2.fip.address
{% endif %}
  instance_id = openstack_compute_instance_v2.node.id
}
{% endif %}
