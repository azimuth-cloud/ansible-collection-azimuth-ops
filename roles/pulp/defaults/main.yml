
pulp_release_namespace: pulp
pulp_release_name: pulp

pulp_operator_chart_repo: https://github.com/pulp/pulp-k8s-resources/raw/main/helm-charts/
pulp_operator_chart_name: pulp-operator
pulp_operator_chart_version: '0.1.0'
pulp_operator_wait_timeout: 10m
pulp_operator_release_values: {}

pulp_operator_watches:
  - kind: deployment
    namespace: "{{ pulp_release_namespace }}"
    name: pulp-operator-controller-manager
    condition: Available

pulp_database_name: "{{ pulp_release_name }}-db"
pulp_database_data_volume_storage_class:
pulp_database_backup_volume_storage_class: "{{ pulp_database_data_volume_storage_class}}"
pulp_database_data_volume_size: 8Gi # dunno how you decide this!
pulp_database_backup_volume_size: "{{ pulp_database_data_volume_size }}"

pulp_labels:
  app.kubernetes.io/managed-by: azimuth-ops

pulp_ingress_name: pulp-ingress
pulp_ingress_class: nginx
pulp_ingress_host:  >-
  {{-
    "{}.{}".format(ingress_pulp_subdomain, ingress_base_domain)
    if ingress_pulp_subdomain is defined and ingress_pulp_subdomain is defined
    else undef(hint = 'pulp_ingress_host is required')
  }}
pulp_ingress_annotations_defaults: "{{ ingress_annotations | default({}) }}"
pulp_ingress_annotations_overrides: {}
pulp_ingress_tls_enabled: "{{ ingress_tls_enabled | default(true) }}"
pulp_ingress_tls_secret_name: "{{ ingress_tls_secret_name | default('pulp-tls', True) }}"
pulp_ingress_tls_annotations: "{{ ingress_tls_annotations | default({}) }}"
pulp_ingress_tls_certificate: "{{ ingress_tls_wildcard_certificate | default(None) }}"
pulp_ingress_annotations: >-
  {{-
    pulp_ingress_annotations_defaults |
      combine(
        pulp_ingress_tls_annotations
        if pulp_ingress_tls_enabled and not pulp_ingress_tls_certificate
        else {}
      ) |
      combine(pulp_ingress_annotations_overrides)
  }}
# Note service below is created by operator
# See https://github.com/pulp/pulp-operator/blob/main/docs/configuring/networking/reverse_proxy.md#manually-configuring-ingress-resources
pulp_ingress_spec_defaults: >-
  {{-
    {
      "ingressClassName": pulp_ingress_class,
      "rules": [
        {
          "host": pulp_ingress_host,
          "http": {
            "paths": [
              {
                "path": "/pulp/content/",
                "pathType": "Prefix",
                "backend": {
                  "service": {
                    "name": pulp_release_name ~ "-content-svc",
                    "port": {
                      "name": "content-24816",
                    },
                  },
                },
              },
            ],
          },
        },
      ],
    } | combine(
      {
        "tls": [
          {
            "hosts": [pulp_ingress_host],
            "secretName": pulp_ingress_tls_secret_name,
          }
        ]
      }
      if pulp_ingress_tls_enabled
      else {}
    )
  }}
pulp_ingress_spec_overrides: {}
pulp_ingress_spec: >-
  {{-
    pulp_ingress_spec_defaults |
      combine(pulp_ingress_spec_overrides, recursive = True)
  }}

pulp_image: quay.io/pulp/pulp
pulp_image_version: '3.52.0'
pulp_image_web_version: '3.52.0'

pulp_external_url_scheme: "{{ 'https' if pulp_ingress_tls_enabled else 'http' }}"
pulp_external_url_base: "{{ pulp_external_url_scheme }}://{{ pulp_ingress_host }}"
pulp_external_url_content: "{{ pulp_external_url_base }}/pulp/content/"
