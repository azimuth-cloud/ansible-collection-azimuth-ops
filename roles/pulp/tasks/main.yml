---

- name: Create Pulp release namespace
  command: kubectl create namespace {{ pulp_release_namespace }}
  register: pulp_create_namespace
  changed_when: pulp_create_namespace.rc == 0
  failed_when: >-
    pulp_create_namespace.rc != 0 and
    'AlreadyExists' not in pulp_create_namespace.stderr

# - name: Install trust bundle
#   command: kubectl apply -f -
#   args:
#     stdin: "{{ pulp_trust_bundle_secret_definition | to_nice_yaml }}"
#   vars:
#     pulp_trust_bundle_secret_definition:
#       apiVersion: v1
#       kind: Secret
#       metadata:
#         name: "{{ pulp_trust_bundle_secret_name }}"
#         namespace: "{{ pulp_release_namespace }}"
#       stringData:
#         ca.crt: "{{ pulp_trust_bundle }}"
#   when: pulp_trust_bundle

# - name: Install wildcard TLS certificate
#   command: kubectl apply -f -
#   args:
#     stdin: "{{ pulp_tls_wildcard_secret_definition | to_nice_yaml }}"
#   vars:
#     pulp_tls_wildcard_secret_definition:
#       apiVersion: v1
#       kind: Secret
#       metadata:
#         name: "{{ pulp_tls_secret_name }}"
#         namespace: "{{ pulp_release_namespace }}"
#       type: kubernetes.io/tls
#       stringData:
#         tls.crt: "{{ pulp_tls_wildcard_certificate }}"
#         tls.key: "{{ pulp_tls_wildcard_key }}"
#   when: pulp_tls_wildcard_certificate

- name: Make kustomisation directory
  file:
    path: "{{ pulp_kustomization_directory }}"
    state: directory

- name: Write kustomisation file
  copy:
    content: "{{ pulp_kustomization | to_nice_yaml }}"
    dest: "{{ pulp_kustomisation_directory }}/kustomization.yaml"

- name: Install Pulp resources
  command: kubectl apply --server-side --force-conflicts -k {{ pulp_kustomisation_directory }}

- name: Wait for Pulp controllers to become ready
  command: >-
    kubectl rollout status
      --namespace "{{ watch.namespace }}"
      --timeout 1s
      {{ watch.kind }}/{{ watch.name }}
  changed_when: false
  register: pulp_controller_wait
  until: pulp_controller_wait is succeeded
  retries: 60
  delay: 10
  loop: "{{ pulp_watches }}"
  loop_control:
    loop_var: watch
    label: "{{ watch.namespace }}/{{ watch.kind }}/{{ watch.name }}"
