---

# Crunchy Data do not publish Helm charts, so we use Kustomize (following the official documentation)
#Â https://access.crunchydata.com/documentation/postgres-operator/latest/installation/kustomize/

- name: Create PGO namespace
  command: kubectl create namespace {{ pgo_namespace }}
  register: pgo_create_namespace
  changed_when: pgo_create_namespace.rc == 0
  failed_when: >-
    pgo_create_namespace.rc != 0 and
    'AlreadyExists' not in pgo_create_namespace.stderr

- name: Remove defunct upgrade controller resources
  command: kubectl delete {{ item.kind }} {{ item.name }} --namespace {{ pgo_namespace }}
  register: pgo_remove_upgrade_component
  changed_when: pgo_remove_upgrade_component.rc == 0
  failed_when: >-
    pgo_remove_upgrade_component.rc != 0 and
    'NotFound' not in pgo_remove_upgrade_component.stderr
  loop:
    - kind: deployment
      name: pgo-upgrade
    - kind: clusterrolebinding
      name: postgres-operator-upgrade
    - kind: clusterrole
      name: postgres-operator-upgrade
    - kind: serviceaccount
      name: postgres-operator-upgrade

- name: Make kustomization directory
  file:
    path: "{{ pgo_kustomization_directory }}"
    state: directory

- name: Write kustomization file
  copy:
    content: "{{ pgo_kustomization | to_nice_yaml }}"
    dest: "{{ pgo_kustomization_directory }}/kustomization.yaml"

- name: Install PGO resources
  command: kubectl apply --server-side -k {{ pgo_kustomization_directory }}

- name: Wait for PGO controllers to become ready
  command: >-
    kubectl rollout status
      --namespace {{ watch.namespace }}
      --timeout 1s
      {{ watch.kind }}/{{ watch.name }}
  changed_when: false
  register: pgo_controller_wait
  until: pgo_controller_wait is succeeded
  retries: 60
  delay: 10
  loop: "{{ pgo_watches }}"
  loop_control:
    loop_var: watch
    label: "{{ watch.namespace }}/{{ watch.kind }}/{{ watch.name }}"

- name: Install monitoring dashboards
  command: kubectl apply -f -
  args:
    stdin: "{{ pgo_dashboard_definition | to_nice_yaml }}"
  vars:
    pgo_dashboard_definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: postgres-dashboards
        namespace: "{{ pgo_namespace }}"
        labels:
          grafana_dashboard: "1"
      data:
        pgbackrest.json: |-
          {{ lookup("file", "grafana_dashboards/pgbackrest.json") | from_json | to_nice_json }}
        pod_details.json: |-
          {{ lookup("file", "grafana_dashboards/pod_details.json") | from_json | to_nice_json }}
        postgresql_details.json: |-
          {{ lookup("file", "grafana_dashboards/postgresql_details.json") | from_json | to_nice_json }}
        postgresql_service_health.json: |-
          {{ lookup("file", "grafana_dashboards/postgresql_service_health.json") | from_json | to_nice_json }}
        query_statistics.json: |-
          {{ lookup("file", "grafana_dashboards/query_statistics.json") | from_json | to_nice_json }}
