---

# The repo, version and manifest URL for the Cluster API core components
clusterapi_core_repo: https://github.com/kubernetes-sigs/cluster-api
clusterapi_core_version: v1.7.3
clusterapi_core_components: "{{ clusterapi_core_repo }}/releases/download/{{ clusterapi_core_version }}/cluster-api-components.yaml"

# The repo, version and manifest URL for the Cluster API OpenStack provider components
clusterapi_openstack_repo: https://github.com/kubernetes-sigs/cluster-api-provider-openstack
clusterapi_openstack_version: v0.9.0
clusterapi_openstack_components: "{{ clusterapi_openstack_repo }}/releases/download/{{ clusterapi_openstack_version }}/infrastructure-components.yaml"

# The diagnostics address for Cluster API components
clusterapi_diagnostics_address: 0.0.0.0:8443
clusterapi_insecure_diagnostics: false

# Variables for toggling feature gates for experimental features
clusterapi_feature_gate_machine_pool: false
clusterapi_feature_gate_cluster_resource_set: true
clusterapi_feature_gate_cluster_topology: true
clusterapi_feature_gate_runtime_sdk: true
clusterapi_feature_gate_machine_set_preflight_checks: true
clusterapi_feature_gate_kubeadm_bootstrap_format_ignition: false

clusterapi_core_feature_gates:
  MachinePool: "{{ clusterapi_feature_gate_machine_pool }}"
  ClusterResourceSet: "{{ clusterapi_feature_gate_cluster_resource_set }}"
  ClusterTopology: "{{ clusterapi_feature_gate_cluster_topology }}"
  RuntimeSDK: "{{ clusterapi_feature_gate_runtime_sdk }}"
  MachineSetPreflightChecks: "{{ clusterapi_feature_gate_machine_set_preflight_checks }}"
clusterapi_kubeadm_bootstrap_feature_gates:
  MachinePool: "{{ clusterapi_feature_gate_machine_pool }}"
  KubeadmBootstrapFormatIgnition: "{{ clusterapi_feature_gate_kubeadm_bootstrap_format_ignition }}"
clusterapi_kubeadm_control_plane_feature_gates:
  ClusterTopology: "{{ clusterapi_feature_gate_cluster_topology }}"
  KubeadmBootstrapFormatIgnition: "{{ clusterapi_feature_gate_kubeadm_bootstrap_format_ignition }}"

# List of Cluster API component manifests to install
clusterapi_manifests:
  - "{{ clusterapi_core_components }}"
  - "{{ clusterapi_openstack_components }}"

# List of patches to apply to the resources in the manifests
clusterapi_patches:
  # The manifests contain environment variable substitutions for feature gates that we do not need
  - patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/args
        value:
          - --leader-elect
          - --diagnostics-address={{ clusterapi_diagnostics_address }}
          - --insecure-diagnostics={{ "true" if clusterapi_insecure_diagnostics else "false" }}
          - --feature-gates={% for k, v in clusterapi_core_feature_gates.items() %}{{ k }}={{ "true" if v else "false" }}{{ "" if loop.last else "," }}{% endfor %}
    target:
      kind: Deployment
      namespace: capi-system
      name: capi-controller-manager
  - patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/args
        value:
          - --leader-elect
          - --diagnostics-address={{ clusterapi_diagnostics_address }}
          - --insecure-diagnostics={{ "true" if clusterapi_insecure_diagnostics else "false" }}
          - --feature-gates={% for k, v in clusterapi_kubeadm_bootstrap_feature_gates.items() %}{{ k }}={{ "true" if v else "false" }}{{ "" if loop.last else "," }}{% endfor %}
    target:
      kind: Deployment
      namespace: capi-kubeadm-bootstrap-system
      name: capi-kubeadm-bootstrap-controller-manager
  - patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/args
        value:
          - --leader-elect
          - --diagnostics-address={{ clusterapi_diagnostics_address }}
          - --insecure-diagnostics={{ "true" if clusterapi_insecure_diagnostics else "false" }}
          - --feature-gates={% for k, v in clusterapi_kubeadm_control_plane_feature_gates.items() %}{{ k }}={{ "true" if v else "false" }}{{ "" if loop.last else "," }}{% endfor %}
    target:
      kind: Deployment
      namespace: capi-kubeadm-control-plane-system
      name: capi-kubeadm-control-plane-controller-manager

# The kustomization to use for Cluster API
clusterapi_kustomization:
  resources: "{{ clusterapi_manifests }}"
  patches: "{{ clusterapi_patches }}"

# Use a directory in $HOME for the kustomization by default
clusterapi_kustomization_directory: "{{ (ansible_env.HOME, 'clusterapi') | path_join }}"

# List of resources to watch for completeness
clusterapi_watches:
  - kind: deployment
    namespace: capi-system
    name: capi-controller-manager
    condition: Available
  - kind: deployment
    namespace: capi-kubeadm-bootstrap-system
    name: capi-kubeadm-bootstrap-controller-manager
    condition: Available
  - kind: deployment
    namespace: capi-kubeadm-control-plane-system
    name: capi-kubeadm-control-plane-controller-manager
    condition: Available
  - kind: deployment
    namespace: capo-system
    name: capo-controller-manager
    condition: Available

# Helm chart information for the Cluster API addon provider
clusterapi_addon_provider_chart_repo: https://azimuth-cloud.github.io/cluster-api-addon-provider
clusterapi_addon_provider_chart_name: cluster-api-addon-provider
clusterapi_addon_provider_chart_version: 0.5.9

# Release information for the Cluster API addon provider release
clusterapi_addon_provider_release_namespace: capi-addon-system
clusterapi_addon_provider_release_name: cluster-api-addon-provider

# The timeout to wait for the Cluster API addon provider to become ready
clusterapi_addon_provider_wait_timeout: 30m

# The values for the Cluster API addon provider deployment
# The defaults are sufficient for most use cases
clusterapi_addon_provider_release_values: {}

# Helm chart information for the Cluster API janitor
clusterapi_janitor_openstack_chart_repo: https://azimuth-cloud.github.io/cluster-api-janitor-openstack
clusterapi_janitor_openstack_chart_name: cluster-api-janitor-openstack
clusterapi_janitor_openstack_chart_version: 0.5.9

# Release information for the Cluster API janitor release
clusterapi_janitor_openstack_release_namespace: capi-janitor-system
clusterapi_janitor_openstack_release_name: cluster-api-janitor-openstack

# The timeout to wait for the Cluster API janitor to become ready
clusterapi_janitor_openstack_wait_timeout: 30m

# The values for the Cluster API janitor deployment
# The defaults are sufficient for most use cases
clusterapi_janitor_openstack_release_values: {}
