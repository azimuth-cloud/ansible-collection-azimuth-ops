---

# The chart to use for Grafana
cloud_metrics_grafana_chart_repo: https://grafana.github.io/helm-charts
cloud_metrics_grafana_chart_name: grafana
cloud_metrics_grafana_chart_version: 7.3.10

# Release information for the Grafana release
# By default, deploy into the same namespace as Azimuth
cloud_metrics_grafana_release_namespace: "{{ azimuth_release_namespace | default('azimuth') }}"
cloud_metrics_grafana_release_name: cloud-metrics

# The timeout to wait for Grafana to become ready
cloud_metrics_grafana_wait_timeout: 10m

# Configuration for the external Prometheus
cloud_metrics_prometheus_host: >-
  {{ undef(hint = 'cloud_metrics_prometheus_host is required') }}
cloud_metrics_prometheus_ip: >-
  {{ undef(hint = 'cloud_metrics_prometheus_ip is required') }}
cloud_metrics_prometheus_port: >-
  {{ undef(hint = 'cloud_metrics_prometheus_port is required') }}
cloud_metrics_prometheus_basic_auth_username: >-
  {{ undef(hint = 'cloud_metrics_prometheus_basic_auth_username is required') }}
cloud_metrics_prometheus_basic_auth_password: >-
  {{ undef(hint = 'cloud_metrics_prometheus_basic_auth_password is required') }}

# Configuration for the Prometheus scrape
cloud_metrics_prometheus_auth_secret_name: cloud-metrics-os-capacity-auth
cloud_metrics_prometheus_auth_data:
  username: "{{ cloud_metrics_prometheus_basic_auth_username }}"
  password: "{{ cloud_metrics_prometheus_basic_auth_password }}"

cloud_metrics_prometheus_service_name: cloud-metrics-os-capacity
cloud_metrics_prometheus_service_labels:
  app: cloud-metrics
  component: remote-prometheus

cloud_metrics_prometheus_servicemonitor_name: "{{ cloud_metrics_prometheus_service_name }}"
# The spec is set up for Prometheus federation
cloud_metrics_prometheus_servicemonitor_params:
  "match[]":
    - "{job=~\"os_capacity|libvirt_exporter\"}"
cloud_metrics_prometheus_servicemonitor_tls_config:
  serverName: "{{ cloud_metrics_prometheus_host }}"
cloud_metrics_prometheus_servicemonitor_spec:
  endpoints:
    - port: metrics
      path: /federate
      scheme: https
      params: "{{ cloud_metrics_prometheus_servicemonitor_params }}"
      basicAuth:
        username:
          name: "{{ cloud_metrics_prometheus_auth_secret_name }}"
          key: username
        password:
          name: "{{ cloud_metrics_prometheus_auth_secret_name }}"
          key: password
      honorLabels: true
      tlsConfig: "{{ cloud_metrics_prometheus_servicemonitor_tls_config }}"
  namespaceSelector:
    matchNames:
      - "{{ cloud_metrics_grafana_release_namespace }}"
  selector:
    matchLabels: "{{ cloud_metrics_prometheus_service_labels }}"

# Azimuth properties that are used to infer default values for the cloud metrics
_azimuth_release_name: "{{ azimuth_release_name | default('azimuth') }}"
_azimuth_api_service_name: >-
  {{
    "{}-api".format(
      _azimuth_release_name
      if 'azimuth' in _azimuth_release_name
      else "{}-azimuth".format(_azimuth_release_name)
    )
  }}
_azimuth_ingress_tls_enabled: >-
  {{-
    azimuth_ingress_tls_enabled
    if azimuth_ingress_tls_enabled is defined
    else (ingress_tls_enabled | default(True))
  }}
_azimuth_ingress_host: >-
  {{-
    azimuth_ingress_host
    if azimuth_ingress_host is defined
    else (
      "{}.{}".format(ingress_azimuth_portal_subdomain, ingress_base_domain)
      if ingress_azimuth_portal_subdomain is defined and ingress_base_domain is defined
      else None
    )
  }}

# Ingress settings for Grafana
#   The name of the ingress class to use
cloud_metrics_grafana_ingress_class: nginx
#   The hostname to use for the ingress resource
cloud_metrics_grafana_ingress_host: >-
  {{
    _azimuth_ingress_host
    if _azimuth_ingress_host
    else undef(hint = 'cloud_metrics_grafana_ingress_host is required')
  }}
#   The subpath to use for ingress
cloud_metrics_grafana_ingress_subpath: /dashboards
#   Any annotations for the ingress
cloud_metrics_grafana_ingress_annotations: "{{ ingress_annotations | default({}) }}"
#   Indicates whether TLS should be enabled
cloud_metrics_grafana_ingress_tls_enabled: "{{ _azimuth_ingress_tls_enabled }}"
#   The TLS secret name (can be null)
cloud_metrics_grafana_ingress_tls_secret_name: "{{ ingress_tls_secret_name | default('cloud-metrics-grafana-tls', True) }}"
#   Any TLS-specific annotations
cloud_metrics_grafana_ingress_tls_annotations: "{{ ingress_tls_annotations | default({}) }}"
#   Wildcard TLS certificate, if available
cloud_metrics_grafana_ingress_tls_certificate: "{{ ingress_tls_wildcard_certificate | default(None) }}"
cloud_metrics_grafana_ingress_tls_key: >-
  {{-
    ingress_tls_wildcard_key
    if ingress_tls_wildcard_key is defined
    else undef(hint = 'cloud_metrics_grafana_ingress_tls_key is required')
  }}

# Settings for the auth callout
#   The URL for the auth callout
#   If not set, no auth callout is configured
cloud_metrics_grafana_ingress_auth_url: >-
  {{
    "http://{}.{}.svc.cluster.local/api/session/verify/".format(
      _azimuth_api_service_name,
      azimuth_release_namespace | default('azimuth')
    )
  }}
#   The URL to redirect to when the verify URL returns a 401
#   If not set, the 401 will just be returned
cloud_metrics_grafana_ingress_auth_signin_url: >-
  {{
    "{}://{}/auth/login".format(
      'https' if _azimuth_ingress_tls_enabled else 'http',
      _azimuth_ingress_host
    )
    if _azimuth_ingress_host
    else undef(hint = 'cloud_metrics_grafana_ingress_auth_signin_url is required')
  }}
#   The URL parameter to contain the original URL when redirecting
cloud_metrics_grafana_ingress_auth_next_url_param: next
#   Dictionary of headers to set for authentication requests
#   These will override headers from the incoming request, which would otherwise be forwarded
#   In particular, you may need to override the accepts header to suit the content types served
#   by the external authentication service
cloud_metrics_grafana_ingress_auth_request_headers:
  accept: application/json
#   The ingress annotations that configure the auth callout
cloud_metrics_grafana_ingress_auth_annotations:
  nginx.ingress.kubernetes.io/auth-url: "{{ cloud_metrics_grafana_ingress_auth_url }}"
  nginx.ingress.kubernetes.io/auth-signin: "{{ cloud_metrics_grafana_ingress_auth_signin_url }}"
  nginx.ingress.kubernetes.io/auth-signin-redirect-param: "{{ cloud_metrics_grafana_ingress_auth_next_url_param }}"
  nginx.ingress.kubernetes.io/auth-snippet: |-
    {% for name, value in cloud_metrics_grafana_ingress_auth_request_headers.items() %}
    proxy_set_header {{ name }} {{ value }};
    {% endfor %}

# The admin username and password for Grafana
cloud_metrics_grafana_admin_username: admin
cloud_metrics_grafana_admin_password: "{{ undef(hint = 'cloud_metrics_grafana_admin_password is required') }}"

# Details for the Grafana admin secret
cloud_metrics_grafana_admin_secret_name: "{{ cloud_metrics_grafana_release_name }}-grafana-admin"
cloud_metrics_grafana_admin_secret_user_key: username
cloud_metrics_grafana_admin_secret_password_key: password

# Configuration for persistent storage, so that changes to the Grafana DB are persistent
#   Indicates whether persistence should be enabled
cloud_metrics_grafana_persistence_enabled: true
#   The size of the PVC to use
cloud_metrics_grafana_persistence_size: 10Gi
#   The name of the storage class to use - leave blank for the default
cloud_metrics_grafana_persistence_storage_class_name:

# Configuration for the dashboards to add
cloud_metrics_grafana_dashboard_home: "{{ lookup('file', 'cloud-metrics-dashboard.json') }}"
cloud_metrics_grafana_dashboard_tenant: "{{ lookup('file', 'tenant-metrics-dashboard.json') }}"
#   When the above variables are used, they are interpreted as datastructures
cloud_metrics_grafana_dashboards:
  default:
    home:
      json: "{{ cloud_metrics_grafana_dashboard_home | to_json }}"
    tenant:
      json: "{{ cloud_metrics_grafana_dashboard_tenant | to_json }}"
#   The dashboards must have a corresponding provider configuration
cloud_metrics_grafana_dashboard_providers:
  dashboardproviders.yaml:
    apiVersion: 1
    providers: >-
      [
        {% for provider in cloud_metrics_grafana_dashboards.keys() %}
        {
          "name": "{{ provider }}",
          "type": "file",
          "disableDeletion": true,
          "updateIntervalSeconds": 86400,
          "allowUiUpdates": false,
          "options": {
            "path": "/var/lib/grafana/dashboards/{{ provider }}"
          }
        },
        {% endfor %}
      ]

# The UIDs of the home and tenant dashboards
# Used to build the URLs that are handed to Azimuth for metrics
cloud_metrics_grafana_home_dashboard_uid: >-
  {{-
    cloud_metrics_grafana_dashboards.default.home.json |
      from_json |
      json_query("uid")
  }}
cloud_metrics_grafana_tenant_dashboard_uid: >-
  {{-
    cloud_metrics_grafana_dashboards.default.tenant.json |
      from_json |
      json_query("uid")
  }}
# The variable name that the tenant ID should be placed in
cloud_metrics_grafana_tenant_id_var: project_id

# Configuration for the datasources to add
# By default, we add the Azimuth Prometheus
cloud_metrics_datasource_prometheus_scheme: http
cloud_metrics_datasource_prometheus_host: kube-prometheus-stack-prometheus.monitoring-system
cloud_metrics_datasource_prometheus_port: 9090
cloud_metrics_datasource_prometheus_url: >-
  {{-
    "{}://{}:{}".format(
      cloud_metrics_datasource_prometheus_scheme,
      cloud_metrics_datasource_prometheus_host,
      cloud_metrics_datasource_prometheus_port
    )
  }}
cloud_metrics_grafana_datasources:
  prometheus.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: "{{ cloud_metrics_datasource_prometheus_url }}"
        access: proxy
        isDefault: true

# The deployment strategy for Grafana
# If using persistence with RWO PVCs, this must be Recreate or the deployment gets stuck
cloud_metrics_grafana_deployment_strategy:
  type: Recreate

# The values for the release
cloud_metrics_grafana_release_defaults:
  deploymentStrategy: "{{ cloud_metrics_grafana_deployment_strategy }}"
  ingress:
    enabled: true
    hosts: ["{{ cloud_metrics_grafana_ingress_host }}"]
    path: "{{ cloud_metrics_grafana_ingress_subpath }}"
    ingressClassName: "{{ cloud_metrics_grafana_ingress_class }}"
    annotations: >-
      {{-
        cloud_metrics_grafana_ingress_annotations |
          combine(cloud_metrics_grafana_ingress_auth_annotations) |
          combine(
            cloud_metrics_grafana_ingress_tls_annotations
            if (
              cloud_metrics_grafana_ingress_tls_enabled and
              not cloud_metrics_grafana_ingress_tls_certificate
            )
            else {}
          )
      }}
    tls: >-
      {{-
        [
          {
            "hosts": [cloud_metrics_grafana_ingress_host],
            "secretName": cloud_metrics_grafana_ingress_tls_secret_name,
          }
        ]
        if cloud_metrics_grafana_ingress_tls_enabled
        else []
      }}
  persistence:
    enabled: "{{ cloud_metrics_grafana_persistence_enabled }}"
    size: "{{ cloud_metrics_grafana_persistence_size }}"
    storageClassName: "{{ cloud_metrics_grafana_persistence_storage_class_name }}"
  admin:
    existingSecret: "{{ cloud_metrics_grafana_admin_secret_name }}"
    userKey: "{{ cloud_metrics_grafana_admin_secret_user_key }}"
    passwordKey: "{{ cloud_metrics_grafana_admin_secret_password_key }}"
  dashboards: "{{ cloud_metrics_grafana_dashboards }}"
  dashboardProviders: "{{ cloud_metrics_grafana_dashboard_providers }}"
  datasources: "{{ cloud_metrics_grafana_datasources }}"
  # Enable anonymous auth as we are already imposing Azimuth auth
  grafana.ini:
    server:
      root_url: "%(protocol)s://%(domain)s:%(http_port)s{{ cloud_metrics_grafana_ingress_subpath }}/"
      serve_from_sub_path: true
    auth.anonymous:
      enabled: true
    dashboards:
      # This is the path where the dashboards are mounted in the pod
      default_home_dashboard_path: /var/lib/grafana/dashboards/default/home.json
  rbac:
    pspEnabled: false
cloud_metrics_grafana_release_overrides: {}
cloud_metrics_grafana_release_values: >-
  {{-
    cloud_metrics_grafana_release_defaults |
      combine(cloud_metrics_grafana_release_overrides, recursive = True)
  }}
