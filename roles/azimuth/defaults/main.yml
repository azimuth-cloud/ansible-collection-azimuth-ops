---

# The chart to use
azimuth_chart_repo: https://stackhpc.github.io/azimuth
azimuth_chart_name: azimuth
azimuth_chart_version: 0.5.0

# Release information for the Azimuth release
azimuth_release_namespace: azimuth
azimuth_release_name: azimuth

# The timeout to wait for Azimuth to become ready
azimuth_wait_timeout: 10m

# Feature flags
#   Indicates if the app proxy should be enabled
azimuth_apps_enabled: yes
#   Indicates if Cluster-as-a-Service should be enabled
azimuth_clusters_enabled: yes
#   Indicates if Kubernetes clusters should be enabled
azimuth_kubernetes_enabled: yes

# Ingress settings
#   The hostname to use for the ingress resource
azimuth_ingress_host: >-
  {{-
    "{}.{}".format(ingress_azimuth_portal_subdomain, ingress_base_domain)
    if ingress_azimuth_portal_subdomain is defined and ingress_base_domain is defined
    else undef(hint = 'azimuth_ingress_host is required')
  }}
#   Any annotations for the ingress
azimuth_ingress_annotations: "{{ ingress_annotations | default({}) }}"
#   Indicates whether TLS should be enabled
azimuth_ingress_tls_enabled: "{{ ingress_tls_enabled | default(True) }}"
#   The TLS secret name (can be null)
azimuth_ingress_tls_secret_name: "{{ ingress_tls_secret_name | default(None) }}"
#   Any TLS-specific annotations
azimuth_ingress_tls_annotations: "{{ ingress_tls_annotations | default({}) }}"
#   Wildcard TLS certificate, if available
azimuth_ingress_tls_certificate: "{{ ingress_tls_wildcard_certificate | default(None) }}"
azimuth_ingress_tls_key: >-
  {{-
    ingress_tls_wildcard_key
    if ingress_tls_wildcard_key is defined
    else undef(hint = 'azimuth_ingress_tls_key is required')
  }}

# Custom trust bundle for SSL verification
azimuth_trust_bundle: |-
  {%- if trust_bundle is defined %}
  {%- for certificate in trust_bundle.values() %}
  {{ certificate }}
  {%- endfor %}
  {%- endif %}
# The name of the configmap into which the trust bundle should be placed
azimuth_trust_bundle_configmap_name: "{{ trust_bundle_configmap_name | default('azimuth-trust-bundle') }}"

# The Django secret key, used mainly for ensuring session cookies are not tampered with
azimuth_secret_key: "{{ undef(hint = 'azimuth_secret_key is required') }}"

# Settings for the available clouds
#   List of linked clouds - each item should contain name, label and url
azimuth_linked_clouds: []
#   The name of this cloud
azimuth_current_cloud_name: "{{ undef(hint = 'azimuth_current_cloud_name is required') }}"
#   The label for this cloud
azimuth_current_cloud_label: >-
  {{ azimuth_current_cloud_name | regex_replace('[^a-z0-9]+', ' ') | capitalize }}

# Settings for the metrics dashboards, if available
# By default, these are provided by the cloud_metrics role
azimuth_metrics_cloud_metrics_url: >-
  {{-
    cloud_metrics_grafana_home_dashboard_url
    if cloud_metrics_grafana_home_dashboard_url is defined
    else None
  }}
azimuth_metrics_tenant_metrics_url_template: >-
  {{-
    cloud_metrics_grafana_tenant_dashboard_url_template
    if cloud_metrics_grafana_tenant_dashboard_url_template is defined
    else None
  }}

# The documentation URL
# By default, we use the generic Azimuth docs
azimuth_documentation_url: https://stackhpc.github.io/azimuth-user-docs/

# A list of curated sizes, mapping a flavor ID to an alternative name and description
# If no sizes are given, the sizes returned by the cloud provider are used
azimuth_curated_sizes: []
  # - # The ID of the flavor in the target cloud
  #   id: "<id>"
  #   # (OPTIONAL) The alternative name
  #   name: "<name>"
  #   # (OPTIONAL) The alternative description
  #   # This is treated as a template with access to the "cpus", "ram", "disk"
  #   # and "ephemeral_disk" for the target flavor, already formatted with units
  #   # WARNING: To avoid Ansible trying to render the template, it must be wrapped in {% raw %}
  #   description: >-
  #     {% raw %}{{ cpus }} CPUs, {{ ram }} RAM, {{ disk }} disk, {{ ephemeral_disk }} ephemeral disk{% endraw %}

# Settings for the configured authenticators
#   Configuration for the password authenticator
azimuth_authenticator_password_enabled: true
azimuth_authenticator_password_label: "Username + Password"
azimuth_authenticator_password_hidden: false
azimuth_authenticator_password_auth_url: "{{ azimuth_openstack_auth_url }}"
azimuth_authenticator_password_domain: "{{ azimuth_openstack_domain }}"
azimuth_authenticator_password_verify_ssl: "{{ azimuth_openstack_verify_ssl }}"
#   Configuration for the appcred authenticator
#     By default, the appcred authenticator is enabled but hidden
#     This is useful when using the SDK as automation can be given an appcred
#     but the option is not presented to users in the choice form
azimuth_authenticator_appcred_enabled: true
azimuth_authenticator_appcred_label: "Application Credential"
azimuth_authenticator_appcred_hidden: true
azimuth_authenticator_appcred_auth_url: "{{ azimuth_openstack_auth_url }}"
azimuth_authenticator_appcred_verify_ssl: "{{ azimuth_openstack_verify_ssl }}"
#   Configuration for the federated authenticator
azimuth_authenticator_federated_enabled: false
azimuth_authenticator_federated_hidden: false
azimuth_authenticator_federated_auth_url: "{{ azimuth_openstack_auth_url }}"
#   Simplified configuration for a single IDP
#   These variables are not used if azimuth_authenticator_federated_identity_providers is specified
azimuth_authenticator_federated_label: "Federated"
azimuth_authenticator_federated_provider: >-
  {{-
    undef(hint = 'azimuth_authenticator_federated_provider is required')
    if azimuth_authenticator_federated_enabled
    else None
  }}
azimuth_authenticator_federated_protocol: >-
  {{-
    undef(hint = 'azimuth_authenticator_federated_protocol is required')
    if azimuth_authenticator_federated_enabled
    else None
  }}
#   The list of identity providers to make available
azimuth_authenticator_federated_identity_providers:
    # A name to identify the identity provider within Azimuth
  - name: "{{ azimuth_authenticator_federated_provider }}_{{ azimuth_authenticator_federated_protocol }}"
    # A human-readble label for the identity provider, used in the selection form
    label: "{{ azimuth_authenticator_federated_label }}"
    # The Keystone identity provider and protocol to use
    # The provider is optional, and if it IS NOT given, URLs will be of the form:
    #   <auth url>/auth/OS-FEDERATION/websso/<protocol>
    # If a provider IS given, URLs will be of the following form:
    #   <auth_url>/auth/OS-FEDERATION/identity_providers/<provider>/protocols/<protocol>/websso
    # It is recommended to specify a provider if known, as it redirects straight to the IdP
    # instead of via the ugly Keystone splash page
    provider: "{{ azimuth_authenticator_federated_provider }}"
    protocol: "{{ azimuth_authenticator_federated_protocol }}"
#   List of authenticators in the order in which they should appear in the form
azimuth_authenticators: >-
  {{-
    [] +
      (
        [
          {
            "name": "federated",
            "type": "openstack-federation",
            "hidden": azimuth_authenticator_federated_hidden,
            "openstackFederation": {
              "authUrl": azimuth_authenticator_federated_auth_url,
              "identityProviders": azimuth_authenticator_federated_identity_providers,
            },
          },
        ]
        if azimuth_authenticator_federated_enabled
        else []
      ) +
      (
        [
          {
            "name": "password",
            "label": azimuth_authenticator_password_label,
            "hidden": azimuth_authenticator_password_hidden,
            "type": "openstack-password",
            "openstackPassword": {
              "authUrl": azimuth_authenticator_password_auth_url,
              "domain": azimuth_authenticator_password_domain,
              "verifySsl": azimuth_authenticator_password_verify_ssl,
            },
          },
        ]
        if azimuth_authenticator_password_enabled
        else []
      ) +
      (
        [
          {
            "name": "appcred",
            "label": azimuth_authenticator_appcred_label,
            "hidden": azimuth_authenticator_appcred_hidden,
            "type": "openstack-application-credential",
            "openstackApplicationCredential": {
              "authUrl": azimuth_authenticator_appcred_auth_url,
              "verifySsl": azimuth_authenticator_appcred_verify_ssl,
            },
          },
        ]
        if azimuth_authenticator_appcred_enabled
        else []
      )
  }}


# OpenStack provider settings
#   The Keystone auth URL
azimuth_openstack_auth_url: "{{ undef(hint = 'azimuth_openstack_auth_url is required') }}"
#   The domain
azimuth_openstack_domain: default
#   The interface - should rarely need to be changed from the default
azimuth_openstack_interface: public
#   Whether or not to verify SSL
azimuth_openstack_verify_ssl: true
#   The template to use when searching for the internal network
#   Only used if the internal network is not tagged
#   If given, network auto-creation is disabled
#   The fragment '{tenant_name}' is replaced with the current tenancy name, e.g. "{tenant_name}-internal"
azimuth_openstack_internal_net_template:
#   The template to use when searching for the external network
#   Only used if the external network is not tagged
#   If not given, there must be exactly one external network available to tenants
#   The fragment '{tenant_name}' is replaced with the current tenancy name, e.g. "{tenant_name}-external"
azimuth_openstack_external_net_template:
#   If larger than zero, project specific manila share should be auto-created
azimuth_openstack_manila_project_share_gb: 0
#   Indicates whether tenant internal networks should be auto-created if not present
azimuth_openstack_create_internal_net: true
#   The CIDR to use for auto-created tenant internal networks
azimuth_openstack_internal_net_cidr: 192.168.3.0/24
#   The nameservers to set on auto-created tenant internal networks
azimuth_openstack_internal_net_dns_nameservers: []

# Azimuth OpenStack provider configuration
azimuth_openstack_provider: >-
  {{-
    {
      "authUrl": azimuth_openstack_auth_url,
      "domain": azimuth_openstack_domain,
      "interface": azimuth_openstack_interface,
      "verifySsl": azimuth_openstack_verify_ssl,
      "manilaProjectShareGB": azimuth_openstack_manila_project_share_gb,
      "createInternalNet": azimuth_openstack_create_internal_net,
      "internalNetCidr": azimuth_openstack_internal_net_cidr
    } |
      combine(
        { "internalNetTemplate": azimuth_openstack_internal_net_template }
        if azimuth_openstack_internal_net_template
        else {}
      ) |
      combine(
        { "externalNetTemplate": azimuth_openstack_external_net_template }
        if azimuth_openstack_external_net_template
        else {}
      ) |
      combine(
        { "internalNetDNSNameservers": azimuth_openstack_internal_net_dns_nameservers }
        if azimuth_openstack_internal_net_dns_nameservers | length > 0
        else {}
      )
  }}

# App proxy settings
#   The base domain for apps
azimuth_apps_base_domain: >-
  {{-
    ingress_base_domain
    if ingress_base_domain is defined
    else (
      undef(hint = 'azimuth_apps_base_domain is required')
      if azimuth_apps_enabled
      else None
    )
  }}
#   Indicates whether SSL should be verified when determining whether a service is ready
azimuth_apps_verify_ssl: true
#   Indicates whether SSL should be verified by clients when associating keys with the
#   registrar using the external endpoint
azimuth_apps_verify_ssl_clients: "{{ azimuth_apps_verify_ssl }}"
#   The external URL for the Zenith registrar
azimuth_apps_registrar_external_url: >-
  {{-
    zenith_registrar_external_url
    if zenith_registrar_external_url is defined
    else (
      undef(hint = 'azimuth_apps_registrar_external_url is required')
      if azimuth_apps_enabled
      else None
    )
  }}
#   The admin URL for the Zenith registrar
azimuth_apps_registrar_admin_url: >-
  {{-
    zenith_registrar_admin_url
    if zenith_registrar_admin_url is defined
    else (
      undef(hint = 'azimuth_apps_registrar_admin_url is required')
      if azimuth_apps_enabled
      else None
    )
  }}
#   The Zenith SSHD host
azimuth_apps_sshd_host: >-
  {{-
    zenith_sshd_host
    if zenith_sshd_host is defined
    else (
      undef(hint = 'azimuth_apps_sshd_host is required')
      if azimuth_apps_enabled
      else None
    )
  }}
#   The Zenith SSHD port
azimuth_apps_sshd_port: "{{ zenith_sshd_port | default(22) }}"
#   The query parameters to add to Zenith URLs when redirecting
#   This is used to indicate to Keycloak that the Azimuth IdP should be
#   used, since we know that the user is already authenticated with Azimuth
azimuth_apps_query_params:
  kc_idp_hint: >-
    {{-
      azimuth_identity_operator_dex_keycloak_client_alias |
        default('azimuth')
    }}

# Theme settings
#   Custom bootstrap CSS URL
azimuth_theme_bootstrap_css_url:
#   Custom CSS snippet
azimuth_theme_custom_css:

# The values for the release
azimuth_release_defaults:
  tags:
    apps: "{{ azimuth_apps_enabled }}"
    clusters: "{{ azimuth_clusters_enabled }}"
    kubernetes: "{{ azimuth_kubernetes_enabled }}"
  ingress:
    host: "{{ azimuth_ingress_host }}"
    annotations: "{{ azimuth_ingress_annotations }}"
    tls:
      enabled: "{{ azimuth_ingress_tls_enabled }}"
      secretName: "{{ azimuth_ingress_tls_secret_name }}"
      annotations: "{{ azimuth_ingress_tls_annotations }}"
  trustBundleConfigMapName: >-
    {{-
      azimuth_trust_bundle_configmap_name
      if azimuth_trust_bundle
      else None
    }}
  settings:
    secretKey: "{{ azimuth_secret_key }}"
    availableClouds: "{{ azimuth_linked_clouds }}"
    currentCloud:
      name: "{{ azimuth_current_cloud_name }}"
      label: "{{ azimuth_current_cloud_label }}"
    metrics: >-
      {{-
        {} |
          combine(
            { "cloudMetricsUrl": azimuth_metrics_cloud_metrics_url }
            if azimuth_metrics_cloud_metrics_url
            else {}
          ) |
          combine(
            { "tenantMetricsUrlTemplate": azimuth_metrics_tenant_metrics_url_template }
            if azimuth_metrics_tenant_metrics_url_template
            else {}
          )
      }}
    documentationUrl: "{{ azimuth_documentation_url }}"
    curatedSizes: "{{ azimuth_curated_sizes }}"
  authenticators: "{{ azimuth_authenticators }}"
  provider:
    openstack: "{{ azimuth_openstack_provider }}"
  apps: >-
    {{-
      {
        "baseDomain": azimuth_apps_base_domain,
        "verifySsl": azimuth_apps_verify_ssl,
        "verifySslClients": azimuth_apps_verify_ssl_clients,
        "sshdHost": azimuth_apps_sshd_host,
        "sshdPort": azimuth_apps_sshd_port,
        "registrarExternalUrl": azimuth_apps_registrar_external_url,
        "registrarAdminUrl": azimuth_apps_registrar_admin_url,
        "queryParams": azimuth_apps_query_params,
      }
      if azimuth_apps_enabled
      else {}
    }}
  theme: >-
    {{-
      {} |
        combine(
          { "bootstrapCssUrl": azimuth_theme_bootstrap_css_url }
          if azimuth_theme_bootstrap_css_url
          else {}
        ) |
        combine(
          { "customCss": azimuth_theme_custom_css }
          if azimuth_theme_custom_css
          else {}
        )
    }}
  # Enable the API monitoring by default
  api:
    monitoring:
      enabled: true
azimuth_release_overrides: {}
azimuth_release_values: >-
  {{-
    azimuth_release_defaults |
      combine(azimuth_release_overrides, recursive = True)
  }}
