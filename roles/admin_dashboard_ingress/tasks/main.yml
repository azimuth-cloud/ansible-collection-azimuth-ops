---

- name: Create namespace for admin dashboard ingress
  command: kubectl create namespace {{ item }}
  register: admin_dashboard_ingress_create_namespace
  changed_when: admin_dashboard_ingress_create_namespace.rc == 0
  failed_when: >-
    admin_dashboard_ingress_create_namespace.rc != 0 and
    'AlreadyExists' not in admin_dashboard_ingress_create_namespace.stderr
  loop: "{{ admin_dashboard_ingresses | map(attribute = 'namespace') | unique }}"

# Install the basic auth secret once per namespace
- name: Install basic auth secret for admin dashboard ingress
  command: kubectl apply -f -
  args:
    stdin: "{{ admin_dashboard_ingress_basic_auth_secret_definition | to_nice_yaml }}"
  vars:
    admin_dashboard_ingress_basic_auth_secret_definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ admin_dashboard_ingress_basic_auth_secret_name }}"
        namespace: "{{ item }}"
      type: Opaque
      stringData: >-
        {{-
          {
            admin_dashboard_ingress_basic_auth_username: (
              admin_dashboard_ingress_basic_auth_password |
                password_hash('bcrypt')
            )
          }
        }}
  loop: "{{ admin_dashboard_ingresses | map(attribute = 'namespace') | unique }}"

# If there is a wildcard certificate, install it once per namespace
- name: Create TLS secret for dashboard
  command: kubectl apply -f -
  args:
    stdin: "{{ admin_dashboard_ingress_tls_wildcard_secret_definition | to_nice_yaml }}"
  vars:
    admin_dashboard_ingress_tls_wildcard_secret_definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ admin_dashboard_ingress_tls_wildcard_secret_name }}"
        namespace: "{{ item }}"
      type: kubernetes.io/tls
      stringData:
        tls.crt: "{{ admin_dashboard_ingress_tls_wildcard_certificate }}"
        tls.key: "{{ admin_dashboard_ingress_tls_wildcard_key }}"
  loop: "{{ admin_dashboard_ingresses | map(attribute = 'namespace') | unique }}"
  when: >-
    admin_dashboard_ingress_tls_enabled and
    admin_dashboard_ingress_tls_wildcard_certificate

- name: Install ingress for admin dashboard
  command: kubectl apply -f -
  args:
    stdin: "{{ admin_dashboard_ingress_definition | to_nice_yaml }}"
  vars:
    admin_dashboard_ingress_definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: "{{ item.name }}"
        namespace: "{{ item.namespace }}"
        labels: "{{ admin_dashboard_ingress_labels }}"
        annotations: "{{ admin_dashboard_ingress_annotations }}"
      spec: >-
        {{-
          {
            "ingressClassName": admin_dashboard_ingress_class_name,
            "rules": [
              {
                "host": item.host,
                "http": {
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "Prefix",
                      "backend": {
                        "service": {
                          "name": item.service,
                          "port": {
                            "name": item.port,
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
          } | combine(
            {
              "tls": [
                {
                  "hosts": [item.host],
                  "secretName": item.tls_secret_name,
                }
              ]
            }
            if admin_dashboard_ingress_tls_enabled
            else {}
          )
        }}
  loop_control:
    label: "{{ item.name }}"
  loop: "{{ admin_dashboard_ingresses }}"
