---
# Get the state information for the seed and adopt it
- name: Set facts from the Terraform state of the seed node
  hosts: terraform_provision
  tasks:
    - name: Discover k3s host and adopt it
      ansible.builtin.include_role:
        name: azimuth_cloud.azimuth_ops.infra
      vars:
        infra_readonly: true
        infra_ansible_groups:
          - k3s
          - azimuth_deploy

# Gather required facts from the seed
- name: Gather facts from the seed node
  hosts: k3s
  environment:
    # In HA mode, use the kubeconfig for the HA cluster
    # In single node mode, use the default kubeconfig file
    KUBECONFIG: >-
      {{-
        "{}/kubeconfig-{}.yaml".format(ansible_env.HOME, capi_cluster_release_name)
        if install_mode == 'ha'
        else ""
      }}
  tasks:
    - name: Get installed cluster types
      ansible.builtin.command: kubectl get clustertypes -o json
      register: generate_tests_cluster_types_cmd
      changed_when: false

    - name: Get installed Kubernetes templates
      ansible.builtin.command: kubectl get clustertemplates -o json
      register: generate_tests_kubernetes_templates_cmd
      changed_when: false

    - name: Get installed Kubernetes app templates
      ansible.builtin.command: kubectl get apptemplates -o json
      register: generate_tests_app_templates_cmd
      changed_when: false

# Generate the tests locally
- name: Generate Azimuth tests
  hosts: terraform_provision
  tasks:
    - name: Copy required facts to current host
      ansible.builtin.set_fact:
        generate_tests_installed_cluster_types: >-
          {{-
            hostvars[groups.k3s.0].generate_tests_cluster_types_cmd.stdout |
              from_json |
              json_query('items')
          }}
        generate_tests_installed_kubernetes_templates: >-
          {{-
            hostvars[groups.k3s.0].generate_tests_kubernetes_templates_cmd.stdout |
              from_json |
              json_query('items')
          }}
        generate_tests_installed_kubernetes_app_templates: >-
          {{-
            hostvars[groups.k3s.0].generate_tests_app_templates_cmd.stdout |
              from_json |
              json_query('items')
          }}

    # Generate the test suite based on the discovered information
    - name: Generate test suite
      ansible.builtin.include_role:
        name: azimuth_cloud.azimuth_ops.generate_tests
